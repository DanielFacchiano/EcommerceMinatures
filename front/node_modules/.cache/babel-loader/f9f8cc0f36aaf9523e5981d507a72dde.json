{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/reactpract/front/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Auth from \"./components/Auth\";\nimport Store from \"./components/Store\";\nimport Checkout from \"./components/Checkout\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // if either of these states are true, we render these components instead of the main store page\n  // If we set this state to true, we want the chat page to show the create channel page\n  const [signIn, setSignIn] = useState(false); //  if we set this to true, we want the channel options to open\n\n  const [checkout, setCheckout] = useState(false); //  used to toggle the cart state, toggles classname for components in Store component\n\n  const [toggleCart, setToggleCart] = useState(false);\n\n  if (signIn) {\n    return /*#__PURE__*/_jsxDEV(Auth, {\n      signIn: signIn,\n      setSignIn: setSignIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (checkout) {\n    return /*#__PURE__*/_jsxDEV(Checkout, {\n      setCheckout: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Pass the cart toggle function to the app so we can toggle the cart with the button\n    //  <Store\n    // toggleCart={toggleCart}\n    // setToggleCart={setToggleCart}\n    // setCheckout={setCheckout}\n    // />\n    _jsxDEV(Checkout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(App, \"AddJmJXVuQT4YUt9JVBYTTNCx+8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dan/Documents/reactpract/front/src/App.jsx"],"names":["React","useState","Cookies","Auth","Store","Checkout","App","signIn","setSignIn","checkout","setCheckout","toggleCart","setToggleCart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAGA,OAAO,aAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd;AACA;AACF,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC,CAJgB,CAKd;;AACF,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC,CANgB,CAOhB;;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAEA,MAAGM,MAAH,EACA;AACE,wBACA,QAAC,IAAD;AACE,MAAA,MAAM,EAAIA,MADZ;AAEE,MAAA,SAAS,EAAIC;AAFf;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AACD,MAAGC,QAAH,EACA;AACE,wBACA,QAAC,QAAD;AACA,MAAA,WAAW;AADX;AAAA;AAAA;AAAA;AAAA,YADA;AAGD;;AACD;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AASD,CAjCD;;GAAMH,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Auth from \"./components/Auth\";\nimport Store from \"./components/Store\";\nimport Checkout from \"./components/Checkout\";\n\n\nimport \"./index.css\";\n\nconst App = () => {\n\n    // if either of these states are true, we render these components instead of the main store page\n    // If we set this state to true, we want the chat page to show the create channel page\n  const [signIn, setSignIn] = useState(false);\n    //  if we set this to true, we want the channel options to open\n  const [checkout, setCheckout] = useState(false);\n  //  used to toggle the cart state, toggles classname for components in Store component\n  const [toggleCart, setToggleCart] = useState(false);\n\n  if(signIn)\n  {\n    return( \n    <Auth \n      signIn = {signIn}\n      setSignIn = {setSignIn}\n    />);\n  }\n  if(checkout)\n  {\n    return ( \n    <Checkout \n    setCheckout/>);\n  }\n  return (\n    // Pass the cart toggle function to the app so we can toggle the cart with the button\n    //  <Store\n    // toggleCart={toggleCart}\n    // setToggleCart={setToggleCart}\n    // setCheckout={setCheckout}\n    // />\n    <Checkout />\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}