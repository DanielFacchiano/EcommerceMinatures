{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/reactpract/front/my-first-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst Auth = () => {\n  _s();\n\n  // Initial state when we enter this page has all saved fields as nothing, as changes in inputs are detected\n  // the state is changed to reflect changes\n  const initialState = {\n    fullName: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(true); // Set our form state to the previous form state, but change the detected e.target name field to\n  // its corresponding value that has been changed\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      fullName,\n      username,\n      password\n    } = form;\n    const URL = 'http://localhost:5000/auth'; //Backticks let us derefrence variables if isignup is true, post to signup else post to login\n    // we await the axios post to our server route of choice, and store the results in data\n\n    const {\n      data: {\n        token,\n        userId,\n        hashedPassword\n      }\n    } = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`, {\n      username,\n      password,\n      fullName\n    });\n    cookies.set('token', token);\n    cookies.set('username', username);\n    cookies.set('fullname', fullName);\n    cookies.set('userId', userId);\n\n    if (isSignup) {\n      cookies.set('hashedPassword', hashedPassword);\n    } //reload browser after setting cookies\n\n\n    window.location.reload();\n  };\n\n  const switchMode = () => {\n    setIsSignup(!isSignup);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth__form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth__form-container_fields\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__form-container_fields-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: isSignup ? 'Create Chat Account so you can Sign in again later' : 'Chat Sign In, set cookies to user information to save sessions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth__form-container_fields-content_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullName\",\n              children: \" Full Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"fullName\",\n              type: \"text\",\n              placeholder: \"Name\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth__form-container_fields-content_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \" User Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              type: \"text\",\n              placeholder: \"username\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth__form-container_fields-content_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \" Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"password\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth__form-container_fields-content_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \" Confirm Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"confirmPassword\",\n              type: \"password\",\n              placeholder: \"password again\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth__form-container_fields-content_button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: isSignup ? \"Sign Up\" : \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth__form-container_fields-account\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [isSignup ? \"Already have an account?  \" : \"Don't Have an Account?  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: switchMode,\n              children: isSignup ? 'Switch to Sign in Page' : 'Switch to Sign Up Page'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"9CmORNuqS94NFdy+0tkbbtgMh98=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/dan/Documents/reactpract/front/my-first-app/src/App.jsx"],"names":["React","useState","axios","Cookies","cookies","Auth","initialState","fullName","username","password","confirmPassword","form","setForm","isSignup","setIsSignup","handleChange","e","target","name","value","handleSubmit","preventDefault","URL","data","token","userId","hashedPassword","post","set","window","location","reload","switchMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AAEA,MAAME,IAAI,GAAG,MAAM;AAAA;;AAEnB;AACA;AACI,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,QAAQ,EAAE,EAFO;AAGjBC,IAAAA,QAAQ,EAAE,EAHO;AAIjBC,IAAAA,eAAe,EAAC;AAJC,GAArB;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACK,YAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC,CAZe,CAef;AACA;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAApC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAM;AAAEd,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,QAAkCE,IAAxC;AAEA,UAAMW,GAAG,GAAE,4BAAX,CAJ8B,CAM9B;AACA;;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAD;AAAQC,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB;AAAR,QAA4C,MAAMxB,KAAK,CAACyB,IAAN,CAAY,GAAEL,GAAI,IAAGT,QAAQ,GAAG,QAAH,GAAc,OAAQ,EAAnD,EACpD;AAACL,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBF,MAAAA;AAArB,KADoD,CAAxD;AAGAH,IAAAA,OAAO,CAACwB,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACApB,IAAAA,OAAO,CAACwB,GAAR,CAAY,UAAZ,EAAwBpB,QAAxB;AACAJ,IAAAA,OAAO,CAACwB,GAAR,CAAY,UAAZ,EAAwBrB,QAAxB;AACAH,IAAAA,OAAO,CAACwB,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;;AAEA,QAAGZ,QAAH,EAAa;AACTT,MAAAA,OAAO,CAACwB,GAAR,CAAY,gBAAZ,EAA8BF,cAA9B;AACH,KAlB6B,CAoB9B;;;AACAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAIH,GAzBD;;AA2BA,QAAMC,UAAU,GAAG,MAAM;AAAClB,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAAuB,GAAjD;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,gCACI;AAAA,oBAAKA,QAAQ,GAAE,oDAAF,GAAyD;AAAtE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,QAAQ,EAAEO,YAAhB;AAAA,qBACKP,QAAQ,iBACL;AAAK,YAAA,SAAS,EAAC,2CAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,WAAW,EAAC,MAHhB;AAII,cAAA,QAAQ,EAAIE,YAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAaQ;AAAK,YAAA,SAAS,EAAC,2CAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,WAAW,EAAC,UAHhB;AAII,cAAA,QAAQ,EAAIA,YAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbR,eAuBQ;AAAK,YAAA,SAAS,EAAC,2CAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,WAAW,EAAC,UAHhB;AAII,cAAA,QAAQ,EAAIA,YAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBR,EAiCKF,QAAQ,iBACL;AAAK,YAAA,SAAS,EAAC,2CAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,iBADT;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,WAAW,EAAC,gBAHhB;AAII,cAAA,QAAQ,EAAIE;AAJhB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCR,eA4CA;AAAK,YAAA,SAAS,EAAC,4CAAf;AAAA,mCACQ;AAAA,wBAASF,QAAQ,GAAG,SAAH,GAAc;AAA/B;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,kBA5CA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAqDI;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAA,iCACI;AAAA,uBACIA,QAAQ,GACP,4BADO,GAEP,0BAHL,eAKG;AAAM,cAAA,OAAO,EAAEmB,UAAf;AAAA,wBACEnB,QAAQ,GAAG,wBAAH,GAA8B;AADxC;AAAA;AAAA;AAAA;AAAA,oBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyEH,CA3HD;;GAAMR,I;;KAAAA,I;AA6HN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\nconst cookies = new Cookies();\n\nconst Auth = () => {\n\n// Initial state when we enter this page has all saved fields as nothing, as changes in inputs are detected\n// the state is changed to reflect changes\n    const initialState = {\n        fullName: '',\n        username: '',\n        password: '',\n        confirmPassword:''\n    }\n\n    const [form, setForm] = useState(initialState)\n    const [isSignup, setIsSignup] = useState(true)\n\n\n    // Set our form state to the previous form state, but change the detected e.target name field to\n    // its corresponding value that has been changed\n    const handleChange = (e) => {\n        setForm({...form, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { fullName, username, password} = form;\n\n        const URL ='http://localhost:5000/auth';\n\n        //Backticks let us derefrence variables if isignup is true, post to signup else post to login\n        // we await the axios post to our server route of choice, and store the results in data\n        const { data :{token, userId, hashedPassword} } = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`,\n            {username, password, fullName});\n\n        cookies.set('token', token)\n        cookies.set('username', username)\n        cookies.set('fullname', fullName)\n        cookies.set('userId', userId)\n\n        if(isSignup) {\n            cookies.set('hashedPassword', hashedPassword)\n        }\n\n        //reload browser after setting cookies\n        window.location.reload();\n\n        \n\n    }\n\n    const switchMode = () => {setIsSignup(!isSignup)}\n\n    return (\n        <div className=\"auth__form-container\">\n            <div className=\"auth__form-container_fields\">\n                <div className=\"auth__form-container_fields-content\">\n                    <h3>{isSignup? 'Create Chat Account so you can Sign in again later' : 'Chat Sign In, set cookies to user information to save sessions'}</h3>\n                    <form onSubmit={handleSubmit}>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"fullName\"> Full Name </label>\n                                <input \n                                    name=\"fullName\" \n                                    type=\"text\" \n                                    placeholder=\"Name\"\n                                    onChange = {handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"username\"> User Name </label>\n                                <input \n                                    name=\"username\" \n                                    type=\"text\" \n                                    placeholder=\"username\"\n                                    onChange = {handleChange}\n                                    required\n                                />\n                            </div>\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"password\"> Password </label>\n                                <input \n                                    name=\"password\" \n                                    type=\"password\" \n                                    placeholder=\"password\"\n                                    onChange = {handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"confirmPassword\"> Confirm Password </label>\n                                <input \n                                    name=\"confirmPassword\" \n                                    type=\"password\" \n                                    placeholder=\"password again\"\n                                    onChange = {handleChange}\n                                />\n                            </div>\n                        )}\n                    <div className=\"auth__form-container_fields-content_button\">\n                            <button>{isSignup ? \"Sign Up\" :\"Sign In\"}</button>\n                            </div>\n\n\n\n                    </form>\n                    <div className=\"auth__form-container_fields-account\">\n                        <p>\n                           {isSignup \n                           ? \"Already have an account?  \"\n                           : \"Don't Have an Account?  \"\n                           }\n                           <span onClick={switchMode}>\n                            {isSignup ? 'Switch to Sign in Page' : 'Switch to Sign Up Page'}\n                            </span> \n                        </p>\n\n                    </div>\n                </div>\n\n            </div>  \n        </div>\n    )\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}